{"version":3,"sources":["components/Checkbox.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","type","key","id","checked","isChecked","value","onChange","handleChecked","htmlFor","Result","className","onClick","click","password","App","state","passwordLength","options","e","forEach","option","target","setState","handleInputChange","handleSubmit","preventDefault","allLetters","generatePass","i","Math","floor","random","length","handleCopy","copy","alert","handleButton","x","clientX","offsetLeft","y","clientY","offsetTop","ripples","document","createElement","style","left","top","querySelector","appendChild","setTimeout","remove","onSubmit","this","map","Checkbox","min","max","defaultValue","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"qOAkBeA,G,MAhBF,SAAAC,GACX,OACE,4BACE,2BACEC,KAAK,WACLC,IAAKF,EAAMG,GACXC,QAASJ,EAAMK,UACfC,MAAON,EAAMM,MACbC,SAAUP,EAAMQ,cAChBL,GAAIH,EAAMM,QAEZ,2BAAOG,QAAST,EAAMM,OAAQN,EAAMM,UCH3BI,EARA,SAAAV,GACb,OACE,yBAAKW,UAAU,SAASC,QAASZ,EAAMa,OACrC,2BAAIb,EAAMc,YC6HDC,E,4MAtHbC,MAAQ,CACNC,eAAgB,EAChBH,SAAU,GACVI,QAAS,CACP,CAAEf,GAAI,EAAGG,MAAO,mBAAeD,WAAW,GAC1C,CAAEF,GAAI,EAAGG,MAAO,mBAAeD,WAAW,GAC1C,CAAEF,GAAI,EAAGG,MAAO,SAAUD,WAAW,GACrC,CAAEF,GAAI,EAAGG,MAAO,kBAAmBD,WAAW,K,EAIlDG,cAAgB,SAAAW,GACd,IAAID,EAAU,EAAKF,MAAME,QACzBA,EAAQE,SAAQ,SAAAC,GACVA,EAAOf,QAAUa,EAAEG,OAAOhB,QAC5Be,EAAOhB,UAAYc,EAAEG,OAAOlB,YAGhC,EAAKmB,SAAS,CAAEL,a,EAGlBM,kBAAoB,SAAAL,GAClB,EAAKI,SAAS,CACZN,eAAgBE,EAAEG,OAAOhB,S,EAI7BmB,aAAe,SAAAN,GACbA,EAAEO,iBACF,IAAIC,EAAa,GACb,EAAKX,MAAME,QAAQ,GAAGb,YACxBsB,GArCe,6BAuCb,EAAKX,MAAME,QAAQ,GAAGb,YACxBsB,GAvCa,6BAyCX,EAAKX,MAAME,QAAQ,GAAGb,YACxBsB,GAzCU,eA2CR,EAAKX,MAAME,QAAQ,GAAGb,YACxBsB,GA3CiB,kCA8CnB,IAAIC,EAAe,GACnB,GAAID,EAAY,CACd,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAKb,MAAMC,eAAgBY,IAAK,CAGlDD,GAAgBD,EAFHG,KAAKC,MAAMD,KAAKE,SAAWL,EAAWM,SAIrD,EAAKV,SAAS,CACZT,SAAUc,M,EAKhBM,WAAa,WACP,EAAKlB,MAAMF,WACbqB,IAAK,EAAKnB,MAAMF,UAChBsB,MAAM,eAAD,OAAgB,EAAKpB,MAAMF,a,EAIpCuB,aAAe,SAAAlB,GACb,IAAImB,EAAInB,EAAEoB,QAAUpB,EAAEG,OAAOkB,WACzBC,EAAItB,EAAEuB,QAAUvB,EAAEG,OAAOqB,UAEzBC,EAAUC,SAASC,cAAc,QACrCF,EAAQG,MAAMC,KAAOV,EAAI,KACzBM,EAAQG,MAAME,IAAMR,EAAI,KACxBI,SAASK,cAAc,UAAUC,YAAYP,GAE7CQ,YAAW,WACTR,EAAQS,WACP,M,uDAGK,IAAD,OACP,OACE,yBAAK1C,UAAU,OACb,oDAAyB,IACzB,yBAAKA,UAAU,aACb,0BAAM2C,SAAUC,KAAK9B,cACnB,4BACG8B,KAAKvC,MAAME,QAAQsC,KAAI,SAAAnC,GACtB,OACE,kBAACoC,EAAD,eACEvD,IAAKmB,EAAOlB,GACZK,cAAe,EAAKA,eAChBa,QAKZ,+BACG,IACD,2BACEpB,KAAK,SACLyD,IAAI,IACJC,IAAI,KACJC,aAAa,IACbjD,UAAU,cACVJ,SAAUgD,KAAK/B,oBARnB,oCAUgB,KAEhB,4BAAQZ,QAAS2C,KAAKlB,cAAtB,uBAEF,kBAAC,EAAD,CACEvB,SAAUyC,KAAKvC,MAAMF,SACrBD,MAAO0C,KAAKrB,mB,GA/GN2B,aCPlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnB,SAASoB,eAAe,U","file":"static/js/main.d29e09c4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <li>\r\n      <input\r\n        type=\"checkbox\"\r\n        key={props.id}\r\n        checked={props.isChecked}\r\n        value={props.value}\r\n        onChange={props.handleChecked}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value}>{props.value}</label>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Result = props => {\r\n  return (\r\n    <div className=\"result\" onClick={props.click}>\r\n      <p>{props.password}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\nimport copy from \"copy-to-clipboard\";\nimport \"../css/style.css\";\nimport Checkbox from \"./Checkbox\";\nimport Result from \"./Result\";\n\nconst smallLetters = \"abcdefghijklmnopqrstuwxyz\";\nconst bigLetters = \"ABCDEFGHIJKLMNOPQRSTUWXYZ\";\nconst numbers = \"01234567890\";\nconst specialLetters = \"!@#$%^&*()_+-=~,.<>?:;`[]{}/''\";\n\nclass App extends Component {\n  state = {\n    passwordLength: 0,\n    password: \"\",\n    options: [\n      { id: 1, value: \"Małe litery\", isChecked: false },\n      { id: 2, value: \"Duże litery\", isChecked: false },\n      { id: 3, value: \"Liczby\", isChecked: false },\n      { id: 4, value: \"Specjalne znaki\", isChecked: false }\n    ]\n  };\n\n  handleChecked = e => {\n    let options = this.state.options;\n    options.forEach(option => {\n      if (option.value === e.target.value) {\n        option.isChecked = e.target.checked;\n      }\n    });\n    this.setState({ options });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      passwordLength: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let allLetters = \"\";\n    if (this.state.options[0].isChecked) {\n      allLetters += smallLetters;\n    }\n    if (this.state.options[1].isChecked) {\n      allLetters += bigLetters;\n    }\n    if (this.state.options[2].isChecked) {\n      allLetters += numbers;\n    }\n    if (this.state.options[3].isChecked) {\n      allLetters += specialLetters;\n    }\n\n    let generatePass = \"\";\n    if (allLetters) {\n      for (let i = 0; i < this.state.passwordLength; i++) {\n        let letter = Math.floor(Math.random() * allLetters.length);\n\n        generatePass += allLetters[letter];\n      }\n      this.setState({\n        password: generatePass\n      });\n    }\n  };\n\n  handleCopy = () => {\n    if (this.state.password) {\n      copy(this.state.password);\n      alert(`Skopiowano: ${this.state.password}`);\n    }\n  };\n\n  handleButton = e => {\n    let x = e.clientX - e.target.offsetLeft;\n    let y = e.clientY - e.target.offsetTop;\n\n    let ripples = document.createElement(\"span\");\n    ripples.style.left = x + \"px\";\n    ripples.style.top = y + \"px\";\n    document.querySelector(\"button\").appendChild(ripples);\n\n    setTimeout(() => {\n      ripples.remove();\n    }, 1000);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Generator haseł</h1>{\" \"}\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <ul>\n              {this.state.options.map(option => {\n                return (\n                  <Checkbox\n                    key={option.id}\n                    handleChecked={this.handleChecked}\n                    {...option}\n                  ></Checkbox>\n                );\n              })}\n            </ul>\n            <label>\n              {\" \"}\n              <input\n                type=\"number\"\n                min=\"0\"\n                max=\"10\"\n                defaultValue=\"0\"\n                className=\"inputNumber\"\n                onChange={this.handleInputChange}\n              />\n              Długość hasła{\" \"}\n            </label>\n            <button onClick={this.handleButton}>Generuj hasło</button>\n          </form>\n          <Result\n            password={this.state.password}\n            click={this.handleCopy}\n          ></Result>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}